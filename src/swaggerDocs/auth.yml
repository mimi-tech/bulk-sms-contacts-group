paths:
  /get-group-contact-by-authId:
    get:
      tags:
        - VIEW  GROUP CONTACT # Value of the tag
      summary: GET ALL CONTACT.
      produces:
        - application/json
      parameters:
        - in: header
          name: authorization
          description: access token
          required: true
          default: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2MzIwODQxODB9.60qxpvDKlXV3x4-XDf2GRWgEkuSvL_XuCYPbn5jil-0

        - in: query
          name: authId
          type: string
          default: a5970193-826b-4163-ad34-c2edc2f2187a
          required: true
      responses:
        200:
          description: should return user group contacts      
    


  /delete-a-contact-by-authId:
    put:
      tags:
        - REMOVE A CONTACT # Value of the tag
      summary: REMOVE A USER CONTACT.
      produces:
        - application/json
      parameters:
        - in: header
          name: authorization
          description: access token
          required: true
          default: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2MzIwODQxODB9.60qxpvDKlXV3x4-XDf2GRWgEkuSvL_XuCYPbn5jil-
        - in: body # request body
          name:   remove-a-contact # name of request, can be any name
          description: It enables users contact to be removed
          required: true # can also be true depending on user preference
          schema: # Schema definition
            $ref: "#/definitions/removeContact"


      responses:
        200:
          description: should return contact deleted successfully


 
  /add-group-contact:
    post:
      tags:
        - ADD CONTACT GROUP # Value of the tag
      summary: FOR GETTING DETAILS OF THE CONTACT GROUP.
      produces:
        - application/json
      parameters:

        - in: header
          name: authorization
          description: access token
          required: true
          default: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2MzIwODQxODB9.60qxpvDKlXV3x4-XDf2GRWgEkuSvL_XuCYPbn5jil-0

        - in: body # request body
          name: add-group-contact # name of request, can be any name
          description: It enables users to add contact
          required: true # can also be true depending on user preference
          schema: # Schema definition
            $ref: "#/definitions/contactGroup"
      responses: # server responses
        201:
          description: should return contact added successful



  /delete-group-contact:
    delete:
      tags:
        - DELETE A CONTACT GROUP BY ID # Value of the tag
      summary: DELETE USER CONTACT GROUP.
      produces:
        - application/json
      parameters:
        - in: header
          name: authorization
          description: access token
          required: true
          default: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2MzIwODQxODB9.60qxpvDKlXV3x4-XDf2GRWgEkuSvL_XuCYPbn5jil-
        - in: body # request body
          name:   delete-group-contact # name of request, can be any name
          description: It enables users contact to be deleted
          required: true # can also be true depending on user preference
          schema: # Schema definition
            $ref: "#/definitions/deleteContact" 

      responses: # server responses
        200:
          description: should return contact added successful     




  /add-products:
    post:
      tags: # Tag property
        - PRODUCTS # Value of the tag
      summary: FOR ADDING PRODUCTS.
      produces:
        - application/json
      parameters:

        - in: body # request body
          name: add-PRODUCTS # name of request, can be any name
          description: It enables users to add products
          required: true # can also be true depending on user preference
          schema: # Schema definition
            $ref: "#/definitions/userProducts"
      responses: # server responses
        201:
          description: should return product added successful






  /view-all-products:
    get:
      tags:
        - PRODUCTS # Value of the tag
      summary: GET ALL PRODUCTS.
      produces:
        - application/json
      parameters:
       
        - in: query
          name: page
          type: number
          default: 1
          required: true
      responses:
        200:
          description: should return all products




  /delete-products:
    delete:
      tags:
        - PRODUCTS # Value of the tag
      summary: DELETE USER PRODUCT.
      produces:
        - application/json
      parameters:
       
        - in: body # request body
          name:   delete-product # name of request, can be any name
          description: It enables users product to be deleted
          required: true # can also be true depending on user preference
          schema: # Schema definition
            $ref: "#/definitions/deleteProducts"


      responses:
        200:
          description: should return product deleted successfully


  /view-products-by-type:
    get:
      tags:
        - PRODUCTS # Value of the tag
      summary: GET PRODUCT BY ID.
      produces:
        - application/json
      parameters:
       
        - in: query
          name: page
          type: number
          default: 1
          required: true


        - in: query
          name: productType
          type: string
          default: Books
          required: true


      responses:
        200:
          description: should return product successfully



  /like-products:
    put:
      tags:
        - PRODUCTS # Value of the tag
      summary: LIKE PRODUCT BY ID.
      produces:
        - application/json
      parameters:
       
        - in: body # request body
          name:   like-products # name of request, can be any name
          description: It enables users contact to be removed
          required: true # can also be true depending on user preference
          schema: # Schema definition
            $ref: "#/definitions/likeProducts"


      responses:
        200:
          description: should return product successfully



  /rate-products:
    put:
      tags:
        - PRODUCTS # Value of the tag
      summary: RATE PRODUCT BY ID.
      produces:
        - application/json
      parameters:
       
        - in: body # request body
          name:   rate-products # name of request, can be any name
          description: It enables users products to be rated
          required: true # can also be true depending on user preference
          schema: # Schema definition
            $ref: "#/definitions/rateProducts"


      responses:
        200:
          description: should return product successfully




definitions: # Schema definition for request body
  


  contactGroup:
    type: object
    properties:
      authId:
          type: string
          default: miriam@gmail.com
     

      contact:
          type: array
          default: ["+23493483439","+23493483948"]

      contactName:
          type: string
          default: CMO     

  

 
  deleteContact:
    type: object
    properties:
      authId:
        type: string
        default: 6c02428b-2fc4-4cc2-b923-c045401f84bf 

      contactName:
        type: string
        default: ANYTHING  


     



  removeContact:
    type: object
    properties:
      authId:
        type: string
        default: 6c02428b-2fc4-4cc2-b923-c045401f84bf       

      contact:
        type: string
        default: +23487485784   


      contactName:
        type: string
        default: 'Everything'    



  userProducts:
    type: object
    properties:
      productId:
          type: string
          default: 387238-23i23-323u40-4uuhu-2837
     

      productName:
          type: string
          default: Shoe


      productType:
          type: string
          default: Shoe

      productImageUrl:
          type: string
          default: Shoe     
 
      productSize:
          type: string
          default: Shoe

      productRate:
          type: number
          default: 1.0

      productLike:
          type: number
          default: 0    


      productOwnerId:
          type: string
          default: Shoe  
          
      productOwnerFirstName:
          type: string
          default: Shoe      


      productOwnerLastName:
          type: string
          default: Shoe   


      productStock:
          type: string
          default: Shoe 

      dateAdded:
          type: string
          default: Shoe                

  

 
  

  deleteAccount:
    type: object
    properties:
      productId:
        type: string
        default: 6c02428b-2fc4-4cc2-b923-c045401f84bf       



  likeProducts:
    type: object
    properties:
      productId:
        type: string
        default: 6c02428b-2fc4-4cc2-b923-c045401f84bf     



  rateProducts:
    type: object
    properties:
      productId:
        type: string
        default: 6c02428b-2fc4-4cc2-b923-c045401f84bf                        

     
     
           

